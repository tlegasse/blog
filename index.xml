<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tanner Legasse</title><link>https://www.tannerlegasse.com/</link><description>Recent content on Tanner Legasse</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 28 Jun 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://www.tannerlegasse.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Sin and Cosin</title><link>https://www.tannerlegasse.com/projects/sin-cosin/</link><pubDate>Sat, 28 Jun 2025 00:00:00 +0000</pubDate><guid>https://www.tannerlegasse.com/projects/sin-cosin/</guid><description>&lt;p>Sin and cosin express the phase of a sin wave either in forward or backwards direction respectively.&lt;/p>
&lt;p>As such, sin and cosin produce a number between -1 and 1 given an input angle.&lt;/p>
&lt;p>They're used heavily across animations to produce repeating angular values:&lt;/p>
&lt;pre class="code">
 const pX = Math.cos(timestamp / timeCoefficient) * rad
 const pY = Math.sin(timestamp / timeCoefficient) * rad
&lt;/pre>
&lt;canvas id="c1">&lt;/canvas>

&lt;br>
&lt;br>
&lt;hr>

&lt;p>Combinations therein can create cool affects, such as this one where the output "particle" follows in a radial
 fashion around a point on our circle.&lt;/p></description></item><item><title>Manual Shopify App Authentication</title><link>https://www.tannerlegasse.com/posts/manual-shopify-app-authentication/</link><pubDate>Sat, 03 May 2025 00:00:00 +0000</pubDate><guid>https://www.tannerlegasse.com/posts/manual-shopify-app-authentication/</guid><description>&lt;p>Welcome! This is the first of many blog posts covering Shopify application development that will be published here. You&amp;rsquo;ll follow me through the project agnostic portions of app build I&amp;rsquo;m working through. You&amp;rsquo;ll see a production ready app from concept and setup to go-live.&lt;/p>
&lt;p>If you follow along with this series, you&amp;rsquo;ll see various components take shape, code examples, and a general rundown of why I&amp;rsquo;m making architectural decisions. Here&amp;rsquo;s something I probably don&amp;rsquo;t need to tell you; &lt;strong>I&amp;rsquo;m not perfect. I also don&amp;rsquo;t pretend to be!&lt;/strong> So don&amp;rsquo;t expect brilliant code that stands up against every possible use case and every setting. Expect working code that serves as a foundation for fun experiments, &lt;em>lots&lt;/em> of learning, and real, working apps. In a lot of cases, I&amp;rsquo;ll be encountering problems and matching them to solutions for the first time ever!&lt;/p></description></item><item><title>Go URL Shortener</title><link>https://www.tannerlegasse.com/projects/go-url-shortener/</link><pubDate>Wed, 17 Jan 2024 00:00:00 +0000</pubDate><guid>https://www.tannerlegasse.com/projects/go-url-shortener/</guid><description>&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>It&amp;rsquo;s 3AM. You need a URL shortener fast. Your boss is breathing down your neck and you have no idea what to do. My new URL shortener is &lt;em>exactly&lt;/em> what you need. Okay, kidding aside, this thing isn&amp;rsquo;t geared toward production environments with high throughput or anything like that. Instead, the goal was to showcase skills that I&amp;rsquo;ve picked up over the past several months in my learning journey with Go. It&amp;rsquo;s been really fun, and this project fit the bill of &amp;ldquo;complex enough to be interesting, not so complex that you program yourself into a hole&amp;rdquo;. The latter will come shortly, but for now I&amp;rsquo;m really pleased with how everything&amp;rsquo;s come out.&lt;/p></description></item><item><title>Archive</title><link>https://www.tannerlegasse.com/archives/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.tannerlegasse.com/archives/</guid><description>archives</description></item></channel></rss>